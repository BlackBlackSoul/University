struct A

11111111				int_8_t   1 aligned
22222222 22222222 22222222 22222222     void*     4 aligned
33333333				int_8_t   1 aligned
44444444 44444444			int_16_t  2 aligned

12 bajtów

11111111 00000000 00000000 00000000 22222222 22222222 22222222 22222222 33333333 00000000 44444444 44444444
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
0	 1        2        3        4        5        6        7        8        9        10       11       13       14       15       16       17

ulepszona wersja:

void*
int_16_t
int_8_t
int_8_t

8 bajtów

11111111 11111111 11111111 11111111 22222222 33333333 44444444 44444444 
-------- -------- -------- -------- -------- -------- -------- -------- 
0	 1        2        3        4        5        6        7         

struct B

11111111 11111111 							uint16_t  2 aligned
22222222 22222222 22222222 22222222 22222222 22222222 22222222 22222222 double    8 aligned 
33333333 33333333 33333333 33333333					void*	  4 aligned

24 bajty

11111111 11111111 00000000 00000000 00000000 00000000 00000000 00000000 22222222 22222222 22222222 22222222 22222222 22222222 22222222 22222222 33333333 33333333 33333333 33333333 00000000 00000000 00000000 00000000
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 
0	 1        2        3        4        5        6        7        8        9        10       11       12       13       14       15       16       17       18       19       20       21       22       23        

ulepszona wersja:

double
void*
uint_16_t

14 bajtów??? (16 bajtów bo zaokrągla do wielokrotności największego elementu)

11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111111 22222222 22222222 22222222 22222222 33333333 33333333 00000000 00000000
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 
0	 1        2        3        4        5        6        7        8        9        10       11       12       13       14       15       16       17       18       19       20       21       22       23   


On most architectures it's faster to perform read/write on aligned data types.

