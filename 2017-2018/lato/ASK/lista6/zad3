typedef struct
{
    int first;
    a_struct a[CNT];
    int last;
} b_struct;

void test (long i, b_struct* bp)
{
    int n = bp->first + bp->last;
    a_struct* ap = &bp->a[i];
    ap->x[ap->idx] = n;
}

test:
    movl   0x120(%rsi),     %ecx	    # %ecx = *(%rsi + 120) // n = bp->last
    addl   (%rsi),          %ecx	    # %ecx = %ecx + *%rsi  // n += bp->first;
    leaq   (%rdi, %rdi, 4), %rax	    # %rax = 5 * i; 
    leaq   (%rsi, %rax, 8), %rax	    # %rax = %rsi + 8*5*i = %rsi + 40i // rax -- a_struct
    movq   0x8(%rax),       %rdx	    # %rdx = *(%rsi + 40i + 8)
    movslq %ecx,            %rcx	    # (int)(%rcx) // (int)n
    movq   %rcx,       0x10(%rax, %rdx, 8)  # *(8*%rdx + %rax + 10) = n
    retq

typedef struct
{
    int idx;
    int x[];
}

b_struct ma 124 bity
int first + a[CNT] ma 120 bitów
a[CNT] + offset ma 116 bitów

&bp->a[i] == %rsi + 40i + 8, czyli a_struct ma 40 bajtów,??? !???
